using Microsoft.VisualStudio.TestTools.UnitTesting;
using NUnit.Framework;
using PenTestTask;
using System;
using Assert = NUnit.Framework.Assert;

namespace Tests
{
    public class Tests
    {
        [Test]
        public void TestPenConstructor_ShouldCorrectAssingValue()
        {
            Pen pen = new Pen(100);
            Assert.IsTrue(pen.isWork());
        }

        [Test]
        public void TestPenConstructorNegative_ShouldCorrectAssingValue()
        {
            Pen pen = new Pen(0);
            Assert.IsFalse(pen.isWork());
        }

        [Test]
        public void TestPenGetColor_ShouldGetCorrectColor()
        {
            Pen pen = new Pen(100, 1.0 ,"Black");
            Assert.AreEqual("Black", pen.getColor());
        }

        [Test]
        public void TestPenWrite_ShouldPrinteNothing()
        {
            Pen pen = new Pen(0);
            Assert.AreEqual("", pen.write("123"));
        }

        [Test]
        public void TestPenWrite_ShouldPrinteGivenWord()
        {
            Pen pen = new Pen(1000);
            Assert.AreEqual("1234567890", pen.write("1234567890"));
        }

        [Test]
        [ExpectedException(typeof(ArgumentOutOfRangeException), "A userId of null was inappropriately allowed.")]
        public void TestPenWrite_ShouldThrowExeption()
        {
            Pen pen = new Pen(100, 1000);
        }
    }
}